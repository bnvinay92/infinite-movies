apply plugin: 'com.android.application'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'com.vanniktech.android.junit.jacoco'

apply from: "../quality/precommithook.gradle"
apply from: "../quality/pitest.gradle"
apply from: "../quality/checkstyle-config.gradle"

android {
  compileSdkVersion 26
  defaultConfig {
    applicationId "com.github.bnvinay92.infinitemovies"
    minSdkVersion 21
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"
    testOptions.unitTests.returnDefaultValues = true
  }
  compileOptions {
    targetCompatibility 1.8
    sourceCompatibility 1.8
  }
}

android.variantFilter { variant ->
  if (variant.buildType.name.equals('release')) {
    variant.setIgnore(true);
  }
}

dependencies {
  implementation 'com.android.support.constraint:constraint-layout:1.0.2'
  compileOnly(
      "com.google.auto.value:auto-value:$versions.autoValue",
  )
  implementation(
      "com.android.support:appcompat-v7:$versions.supportLib",
      "com.android.support:recyclerview-v7:$versions.supportLib",
      'com.android.support.constraint:constraint-layout:1.0.2',

      'io.reactivex.rxjava2:rxjava:2.1.6',
      'io.reactivex.rxjava2:rxandroid:2.0.1',
      'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0',

      'com.jakewharton.timber:timber:4.6.0',

      "com.jakewharton:butterknife:$versions.butterknife",

      "com.squareup.retrofit2:retrofit:$versions.retrofit",
      "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
      "com.squareup.retrofit2:converter-gson:$versions.retrofit",
      "com.squareup.okhttp3:logging-interceptor:3.8.0",


      'javax.annotation:jsr250-api:1.0',
      "com.google.dagger:dagger:$versions.dagger",
  )
  annotationProcessor(
      "com.google.auto.value:auto-value:$versions.autoValue",
      "com.jakewharton:butterknife-compiler:$versions.butterknife",
      "com.google.dagger:dagger-compiler:$versions.dagger",
  )
  testImplementation(
      'junit:junit:4.12',
      "org.mockito:mockito-core:2.12.0",
  )
}
